version: '3.8'

services:

  app:
    build: 
      context: ./app
    entrypoint: ./docker/app/entrypoint.sh
    container_name: app
    depends_on:
      - mongo
    ports:
      - "3000:3000"
    volumes:
      - ../:/home/node/app
    networks:
      - arch-ref-network
  
  mongo:
    image: mongo:5.0.3
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo2021
    volumes:
      - ./mongodb/volumes/:/data/db
    networks:
    - arch-ref-network
    
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      - mongo
    links:
      - "mongo"
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo2021
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: 27017
    networks:
    - arch-ref-network
  
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
    - arch-ref-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8082:8081"
    networks:
    - arch-ref-network
  
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/rabbitmq/
    networks:
    - arch-ref-network

networks: 
  arch-ref-network:
    driver: bridge